
@function empty<T>(seq: T*) -> boolean;
@function present<T>(seq: T*) -> boolean;

@function first<T>(seq: T*) -> T?;
@function last<T>(seq: T*) -> T?;

@function exists<T>(seq: T*, expr: (T) -> boolean) -> boolean;
@function all<T>(seq: T*, expr: (T) -> boolean) -> boolean;
@function none<T>(seq: T*, expr: (T) -> boolean) -> boolean;

@function select<T>(seq: T*, expr: (T) -> Boolean) -> T*;
@function reject<T>(seq: T*, expr: (T) -> Boolean) -> T*;

@function collect<T>(seq: T*, expr: (T) -> R*) -> R*;

@function distinct<T>(seq: T*) -> T*;
@function reverse<T>(seq: T*) -> T*;

@function sort<T>(seq: T*, expr: (T, T) -> integer) -> T*;
@function compare<T>(expr1: T, expr2: T) -> integer;

@function concat<T>(seq1: T*, seq2: T*) -> T*;

@function count<T>(seq: T*) -> long;

@function cross_join<T,S>(seq1: T*, seq2: S*) -> (T, S)*;
