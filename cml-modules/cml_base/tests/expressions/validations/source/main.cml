
@concept InfixValidations
{
    flag: boolean;
    some: Something;

    /derived_flag = flag or some.unknown; // the type of 'derived_flag' should be: UNDEFINED

    number: integer;

    /invalid_flag = flag or number;

    /rel_equality = some == number;
    /rel_inequality = some != number;

    /ref_equality = some === number;
    /ref_inequality = some !== number;

    /bool_rel_equality = flag == flag;
    /bool_rel_inequality = flag != flag;

    /bool_ref_equality = flag === flag;
    /bool_ref_inequality = flag !== flag;
}

@concept UnaryValidations
{
    some: Something;

    /derived_flag = not some.unknown; // the type of 'derived_flag' should be: UNDEFINED

    number: integer;

    /invalid_flag = not number;

    flag: boolean;

    /invalid_number = - flag;
}

@concept Something {}

@concept InvocationValidations
{
    value: string;
    /derived = unknown_function(value);
}

@task expressions_validations: poj {}
