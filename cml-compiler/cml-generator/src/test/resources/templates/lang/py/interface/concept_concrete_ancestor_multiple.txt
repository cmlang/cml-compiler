class Book(Product, StockItem, ABC):

    @abstractproperty
    def title(self) -> 'str':
        pass

    @abstractproperty
    def value(self) -> 'Decimal':
        pass

    @staticmethod
    def create_book(title: 'str', value: 'Decimal' = Decimal("10.0"), base_property: 'str') -> 'Book':
        base = Base.extend_base(base_property)
        product = Product.extend_product(base)
        stock_item = StockItem.extend_stock_item(base)
        return BookImpl(base, product, stock_item, title, value)

    @staticmethod
    def extend_book(base: 'Base', product: 'Product', stock_item: 'StockItem', title: 'str', value: 'Decimal' = Decimal("10.0")) -> 'Book':
        return BookImpl(base, product, stock_item, title, value)