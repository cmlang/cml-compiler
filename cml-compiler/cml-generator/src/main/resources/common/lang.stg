
import "/common/type.stg"
import "/common/field.stg"
import "/common/getter.stg"
import "/common/to_string.stg"
import "/common/interface.stg"
import "/common/class.stg"
import "/common/statement.stg"
import "/common/call.stg"

// Modifiers

modifier(m) ::= ""

abstract_keyword() ::= ""

// Structures

structure(keyword, header, content) ::= <<
<block_header(keyword, header)><\\>
<structure_block_preamble()><\\>
<block({<content>})>
>>

structure_block_preamble() ::= ""

// Blocks

block_header(keyword, content) ::= <<
<({<keyword>_keyword})()><content><block_header_terminator()>
>>

block_header_terminator() ::= ""

// Operations

operation_header(name, params, result_type) ::= <<
<block_header("operation", operation_header_content(name, params, result_type))>
>>

// Classes

constructor(class_name, params, statements) ::= <<
<class_operation(
    name=constructor_name(class_name),
    params=params,
    result_type=[],
    statements=statements
)>
>>

