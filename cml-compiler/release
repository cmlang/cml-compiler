#!/usr/bin/env bash

git diff-index --quiet HEAD --
if [ $? -ne 0 ]; then
    echo "Please commit changes before doing a release."
    exit
fi

if [ -z "$1" ]; then
    echo Please specify the release version as the first argument.
    echo Optionally, also specify the snapshot version to follow the release as the second argument.
    exit 1
fi

CML_SNAPSHOT_VERSION="$2"

if [ -z "$CML_SNAPSHOT_VERSION" ]; then
    CML_SNAPSHOT_VERSION="master-SNAPSHOT"
    echo "CML_SNAPSHOT_VERSION: $CML_SNAPSHOT_VERSION"
    exit 1
fi

CML_VERSION="$1"
CML_PKG_NAME="cml-compiler-${CML_VERSION}.zip"
CML_RELEASE_DIR="cml-releases/cml-compiler"
CML_ROOT="../.."

if [ ! -d "${CML_ROOT}/${CML_RELEASE_DIR}"  ]; then
    echo
    echo ERROR: Unable to find local copy of: https://github.com/cmlang/${CML_RELEASE_DIR}
    echo
    exit 1
fi

if [ ! -d "${CML_ROOT}/homebrew-cml"  ]; then
    echo
    echo ERROR: Unable to find local copy of: https://github.com/cmlang/homebrew-cml
    echo
    exit 1
fi

if [ -f "${CML_ROOT}/${CML_RELEASE_DIR}/${CML_PKG_NAME}"  ]; then
    echo
    echo WARNING: Version ${CML_VERSION} already released at: https://github.com/cmlang/${CML_RELEASE_DIR}
    echo
    exit 1
fi

CML_RELEASE_NOTES="${CML_PKG_NAME}.notes.md"

if [ ! -f "${CML_ROOT}/${CML_RELEASE_DIR}/${CML_RELEASE_NOTES}"  ]; then
    echo
    echo REMINDER: Release notes required before releasing version ${CML_VERSION}:
    echo - Please write the release notes in: ${CML_RELEASE_NOTES}
    echo - Once written, please commit the .zip.notes.md file to the cml-releases repository under the cml-compiler dir.
    echo
    echo After that, you should be able to run the release command again.
    echo
    exit 1
fi

mvn versions:set -DnewVersion=${CML_VERSION}
if [ $? -ne 0 ]; then exit; fi

mvn clean install
if [ $? -ne 0 ]; then exit; fi

cd cml-package
if [ $? -ne 0 ]; then exit; fi

mvn clean assembly:single
if [ $? -ne 0 ]; then exit; fi

cd target
if [ $? -ne 0 ]; then exit; fi

CML_PKG_SOURCE_NAME="cml-package-${CML_VERSION}-distribution.zip"
CML_PKG_SHA=$(shasum -a 256 ${CML_PKG_SOURCE_NAME} | awk '{print $1}')
if [ $? -ne 0 ]; then exit; fi

CML_ROOT="../../../.."
cp "${CML_PKG_SOURCE_NAME}" "${CML_ROOT}/${CML_RELEASE_DIR}/${CML_PKG_NAME}"
if [ $? -ne 0 ]; then exit; fi

cd "${CML_ROOT}/${CML_RELEASE_DIR}"
if [ $? -ne 0 ]; then exit; fi

CML_PKG_SHA_TXT="${CML_PKG_NAME}.sha256.txt"
echo "${CML_PKG_SHA}" >> "${CML_PKG_SHA_TXT}"
if [ $? -ne 0 ]; then exit; fi

git add "${CML_PKG_NAME}"
if [ $? -ne 0 ]; then exit; fi

git add "${CML_PKG_SHA_TXT}"
if [ $? -ne 0 ]; then exit; fi

git add "${CML_RELEASE_NOTES}"
if [ $? -ne 0 ]; then exit; fi

git commit -m "Committing version ${CML_VERSION} of CML Compiler."
if [ $? -ne 0 ]; then exit; fi

git tag -m "CML Compiler ${CML_VERSION}" -a ${CML_VERSION}
if [ $? -ne 0 ]; then exit; fi

git push --tags origin master
if [ $? -ne 0 ]; then exit; fi

CML_ROOT="../.."
cd "${CML_ROOT}/homebrew-cml"
if [ $? -ne 0 ]; then exit; fi

CML_FORMULA="cml-compiler.rb"
CML_TAP_URL="https://raw.githubusercontent.com/cmlang/cml-releases/master/cml-compiler"
cat <<EOF > ${CML_FORMULA}
require "formula"

class CmlCompiler < Formula
  VERSION = "${CML_VERSION}"

  desc "The CML Compiler"
  homepage "http://github.com/cmlang"
  url "${CML_TAP_URL}/cml-compiler-#{VERSION}.zip"
  sha256 "${CML_PKG_SHA}"

  def install
    inreplace "bin/cml", "##PREFIX##", "#{prefix}/libexec"
    libexec.install Dir["*"]
    bin.install_symlink libexec/"bin/cml"
  end

  test do
    assert_equal "Version: #{VERSION}", \`cml --version\`.strip
  end
end
EOF
if [ $? -ne 0 ]; then exit; fi

CML_MAJOR=$(echo "${CML_VERSION}" | cut -d'.' -f 1)
if [ $? -ne 0 ]; then exit; fi

CML_MINOR=$(echo "${CML_VERSION}" | cut -d'.' -f 2)
if [ $? -ne 0 ]; then exit; fi

CML_MINOR_VERSION="${CML_MAJOR}.${CML_MINOR}"
CML_MINOR_VERSION_JOINED="${CML_MAJOR}${CML_MINOR}"
CML_MINOR_FORMULA="cml-compiler@${CML_MINOR_VERSION}.rb"
sed "s/CmlCompiler/CmlCompilerAT${CML_MINOR_VERSION_JOINED}/g" < ${CML_FORMULA} > "${CML_MINOR_FORMULA}"
if [ $? -ne 0 ]; then exit; fi

CML_MAJOR_FORMULA="cml-compiler@${CML_MAJOR}.rb"
sed "s/CmlCompiler/CmlCompilerAT${CML_MAJOR}/g" < ${CML_FORMULA} > "${CML_MAJOR_FORMULA}"
if [ $? -ne 0 ]; then exit; fi

git add ${CML_FORMULA}
if [ $? -ne 0 ]; then exit; fi

git add ${CML_MAJOR_FORMULA}
if [ $? -ne 0 ]; then exit; fi

git add ${CML_MINOR_FORMULA}
if [ $? -ne 0 ]; then exit; fi

git commit -m "Committing version ${CML_VERSION} of CML Compiler."
if [ $? -ne 0 ]; then exit; fi

git tag -m "CML Compiler ${CML_VERSION}" -a ${CML_VERSION}
if [ $? -ne 0 ]; then exit; fi

git push --tags origin master
if [ $? -ne 0 ]; then exit; fi

CML_ROOT=".."
cd "${CML_ROOT}/cml-compiler"
if [ $? -ne 0 ]; then exit; fi

git add -A .
if [ $? -ne 0 ]; then exit; fi

git commit -m "Committing version: ${CML_VERSION}"
if [ $? -ne 0 ]; then exit; fi

git tag -m "Release ${CML_VERSION}" -a ${CML_VERSION}
if [ $? -ne 0 ]; then exit; fi

git push --tags origin master
if [ $? -ne 0 ]; then exit; fi

snapshot-version ${CML_SNAPSHOT_VERSION}
if [ $? -ne 0 ]; then exit; fi

echo
echo Version ${CML_VERSION} released.
echo
echo Check release with:
echo \$ brew tap cmlang\/cml
echo \$ brew upgrade cml-compiler
echo \$ cd \<module\/path\>
echo \$ cml \<task_name\>
echo
