# suppress inspection "UnusedProperty" for whole file

path_ancestors = class.ancestors

select_query = top_items->select((name = "this"))
select_query_nested = top_items->select((name = "this"))->select((qty > 10))
select_query_nested_nested = top_items->select((name = "this"))->select((qty > 10))->select((number <= 10))
select_query_embedded = top_orders->select(items->exists((qty > 10)))->select((total > 100))

select_invocation_nested = top_items->select((name = "this"))->select((qty > 10))
select_invocation_nested_nested = top_items->select((name = "this"))->select((qty > 10))->select((number <= 10))
select_invocation_intermediate = top_orders->select(items->exists((qty > 10)))->select((total > 100))

reject_query = top_items->reject((name = "this"))

yield_query = top_orders->collect(items)->flatten()
yield_query_unique = top_orders->collect(items.product)->flatten()->asSet()

recurse_ancestors = class->closure(ancestors)->flatten()
recurse_unique = class->closure(ancestors)->flatten()->asSet()
recurse_children = children->closure(children)->flatten()->select((ranking > 10))
recurse_self = self->closure(children)->flatten()->select((ranking > 10))

reduce_query =  top_orders->iterate(order; sum = 0 | (sum + order.total))
reduce_enumeration =  top_orders->iterate(order; sum = 0 | (sum + order.total))

enumeration = top_orders->select(order | (order.total > 100))
enumeration_yield = top_orders->collect(order | order.items)->flatten()
enumeration_select = top_orders->select(order | (order.total > 1000))->collect(order | order.items)->flatten()

enumeration_embedded = top_orders->collect(order | order)->flatten()->select((total > 100))
enumeration_embedded_select = top_orders->select(order | (order.total > 100))->collect(items)->flatten()

