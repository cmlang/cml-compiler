
@concept PROPERTY: TYPED_ELEMENT, SCOPE
{
    derived: BOOLEAN;
    declared_type: TYPE?;

/*
    value: EXPRESSION?;
    type_required: BOOLEAN;
    type_allowed: BOOLEAN;

    /model = concept.model;
    /concept = for p in parent | select: p is CONCEPT;
    /association = model.associations | select: (association_ends | exists: property == self) | first;

    /concrete = not abstract;
    /abstract = derived and empty(value);
    /init = present(value) and not derived;
    /non_init = empty(value) and not derived;
    /slot = not (derived or associationEnd);
    /association_end = present(association);
    /printable = (slot and not type.sequence) or type.primitive;
*/
}

@abstraction PROPERTY_LIST: SCOPE
{
    /properties = members as? PROPERTY*;
}

