
@abstraction TYPE: ELEMENT
{
    /cardinality: STRING = "";
    /concept: CONCEPT? = none;
    /element_type: TYPE = self;

    /kind = if cardinality == "" then "required"
            else if cardinality == "?" then "optional"
            else if cardinality == "*" then "sequence"
            else "unknown";

    /matching_result_type = self;
    /base_type = self;

    /parameter = defined and not primitive and empty(concept);
    /defined = not undefined;
    /undefined = false;
    /something = defined and not nothing;
    /nothing = false;

    /relational = string or numeric or binary_floating_point;
    /referential = present(concept) and not sequence;

    /primitive = false;
    /numeric = false;
    /binary_floating_point = false;

    /boolean = false;
    /string = false;

    /single = (required or optional) and not sequence;
    /required = kind == "required";
    /optional = kind == "optional";
    /sequence = kind == "sequence";

    /inferred_cardinality = if required or (optional and boolean) then "" else cardinality;
    /inferred_type: TYPE = self;
}

@abstraction NAMED_TYPE: TYPE
{
    name: string;
}

@concept UNDEFINED_TYPE: NAMED_TYPE
{
    error_message: string;

    /name = "UNDEFINED";
    /undefined = true;
    /parent: SCOPE? = none;
    /location: LOCATION? = none;

    /diagnostic_id = name;
}